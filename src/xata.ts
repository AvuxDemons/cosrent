// Generated by Xata Codegen 0.30.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "user",
    columns: [
      { name: "email", type: "string", unique: true },
      { name: "full_name", type: "string", unique: true },
      { name: "province", type: "string" },
      { name: "regency", type: "string" },
      { name: "district", type: "string" },
      { name: "postcode", type: "string" },
      { name: "address1", type: "string" },
      { name: "address2", type: "string" },
      { name: "phone", type: "string", unique: true },
      { name: "username", type: "string", unique: true },
      { name: "sosmed", type: "json", notNull: true, defaultValue: "[]" },
      { name: "emergencyphone", type: "string", unique: true },
      { name: "identitycard", type: "string" },
      { name: "role", type: "link", link: { table: "role" } },
    ],
  },
  {
    name: "module",
    columns: [
      { name: "key", type: "string", unique: true },
      { name: "label", type: "string" },
    ],
    revLinks: [{ column: "module", table: "permission" }],
  },
  {
    name: "role",
    columns: [{ name: "label", type: "string" }],
    revLinks: [
      { column: "role", table: "permission" },
      { column: "role", table: "user" },
    ],
  },
  {
    name: "permission",
    columns: [
      { name: "role", type: "link", link: { table: "role" } },
      { name: "module", type: "link", link: { table: "module" } },
      { name: "create", type: "bool", notNull: true, defaultValue: "false" },
      { name: "read", type: "bool", notNull: true, defaultValue: "false" },
      { name: "update", type: "bool", notNull: true, defaultValue: "false" },
      { name: "delete", type: "bool", notNull: true, defaultValue: "false" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["user"];
export type UserRecord = User & XataRecord;

export type Module = InferredTypes["module"];
export type ModuleRecord = Module & XataRecord;

export type Role = InferredTypes["role"];
export type RoleRecord = Role & XataRecord;

export type Permission = InferredTypes["permission"];
export type PermissionRecord = Permission & XataRecord;

export type DatabaseSchema = {
  user: UserRecord;
  module: ModuleRecord;
  role: RoleRecord;
  permission: PermissionRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://CosRent-mlh76b.ap-southeast-2.xata.sh/db/COSRENT",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
